{"version":3,"sources":["webpack://shivneriWsClient/webpack/bootstrap","webpack://shivneriWsClient/./src/enums/connection_state.ts","webpack://shivneriWsClient/./src/enums/error_type.ts","webpack://shivneriWsClient/./src/enums/index.ts","webpack://shivneriWsClient/./src/helpers/convert_message.ts","webpack://shivneriWsClient/./src/helpers/get_error.ts","webpack://shivneriWsClient/./src/helpers/index.ts","webpack://shivneriWsClient/./src/helpers/remove_last_slash.ts","webpack://shivneriWsClient/./src/index.ts"],"names":[],"mappings":";;;;;;;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA,IAAY,gBAKX;AALD,WAAY,gBAAgB;IACxB,mEAAc;IACd,uDAAQ;IACR,6DAAW;IACX,2DAAU;AACd,CAAC,EALW,gBAAgB,KAAhB,gBAAgB,QAK3B;;;;;;;;;;;;;ACLD;AAAA;AAAA,IAAY,UAGX;AAHD,WAAY,UAAU;IAClB,wCAA0B;IAC1B,+CAAiC;AACrC,CAAC,EAHW,UAAU,KAAV,UAAU,QAGrB;;;;;;;;;;;;;ACHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6B;AACM;;;;;;;;;;;;;ACCnC;AAAA;AAAO,IAAM,cAAc,GAAG,UAAU,OAA2B;IAC/D,QAAQ,OAAO,CAAC,SAAS,EAAE;QACvB,KAAK,QAAQ;YACT,OAAO,OAAO,CAAC,IAAI;QACvB,KAAK,QAAQ;YACT,OAAO,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAChC,KAAK,MAAM;YACP,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACpC,KAAK,MAAM,CAAC;QACZ,KAAK,SAAS;YACV,OAAO,OAAO,CAAC,IAAI,KAAK,MAAM,CAAC;KAEtC;IACD,OAAO,OAAO,CAAC,IAAI;AACvB,CAAC;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAA4C;AAErC,SAAS,QAAQ,CAAC,GAAe,EAAE,OAAQ;IAC9C,IAAM,eAAe,GAAG;QACpB,QAAQ,GAAG,EAAE;YACT,KAAK,uDAAU,CAAC,UAAU;gBACtB,OAAO,4BAA0B,OAAS,CAAC;YAC/C,KAAK,uDAAU,CAAC,aAAa;gBACzB,OAAO,4BAA4B,CAAC;SAC3C;IACL,CAAC;IAGD,OAAO;QACH,IAAI,EAAE,GAAG;QACT,OAAO,EAAE,eAAe,EAAE;KAC7B,CAAC;AACN,CAAC;;;;;;;;;;;;;ACjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4B;AACO;AACD;;;;;;;;;;;;;ACFlC;AAAA;AAAO,IAAM,eAAe,GAAG,UAAC,GAAW;IACvC,IAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC;IAC7B,uBAAuB;IACvB,IAAI,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;QAC5B,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC;KACvC;IACD,OAAO,GAAG,CAAC;AACf,CAAC,CAAC;;;;;;;;;;;;;ACPF;AAAA;AAAA;AAAA;AAA6D;AACe;AAG5E;IAAA;QAKI,WAAM,GAAY;YACd,YAAY,EAAE,KAAK;YACnB,WAAW,EAAE,KAAK;SACrB,CAAC;QACF,gBAAW,GAAG,KAAK,CAAC;QA+BpB,eAAU,GAAG,EAAE,CAAC;QAwBhB,YAAO,GAAG,UAAU,KAAK;QAEzB,CAAC;QAED,gBAAW,GAAG;QAEd,CAAC;QAED,mBAAc,GAAG;QAEjB,CAAC;IAoFL,CAAC;IAjJG,sBAAI,2BAAK;aAAT;YACI,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU;QACpC,CAAC;;;OAAA;IAED,uBAAI,GAAJ,UAAK,GAAW,EAAE,MAAe;QAAjC,iBAqBC;QApBG,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACpB,IAAI,GAAG,EAAE;YACL,IAAI,CAAC,SAAS,GAAG,sEAAe,CAAC,GAAG,CAAC,CAAC;SACzC;aACI;YACD,MAAM,+DAAQ,CAAC,uDAAU,CAAC,aAAa,CAAC,CAAC;SAC5C;QACD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QACnC,OAAO,IAAI,OAAO,CAAC,UAAC,GAAG,EAAE,GAAG;YACxB,KAAK,CAAC,YAAU,KAAI,CAAC,SAAS,UAAO,CAAC,CAAC,IAAI,CAAC,kBAAQ;gBAChD,IAAI,QAAQ,CAAC,EAAE,EAAE;oBACb,KAAI,CAAC,4BAA4B,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBAC5D;qBACI;oBACD,GAAG,CAAC,+DAAQ,CAAC,uDAAU,CAAC,UAAU,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC;iBACxD;YACL,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG;gBACR,GAAG,CAAC,+DAAQ,CAAC,uDAAU,CAAC,UAAU,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACxD,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAID,wBAAK,GAAL,UAAM,OAAe;QAArB,iBAoBC;QAnBG,OAAO,IAAI,OAAO,CAAC,UAAC,GAAG;YACnB,IAAI,KAAI,CAAC,WAAW,EAAE;gBAClB,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,IAAI,kBAAkB,CAAC,CAAC;gBAC1D,IAAM,eAAa,GAAG;oBAClB,UAAU,CAAC;wBACP,IAAI,KAAI,CAAC,WAAW,EAAE;4BAClB,eAAa,EAAE,CAAC;yBACnB;6BACI;4BACD,GAAG,EAAE,CAAC;yBACT;oBACL,CAAC,EAAE,GAAG,CAAC,CAAC;gBACZ,CAAC;gBACD,eAAa,EAAE,CAAC;aACnB;iBACI;gBACD,GAAG,EAAE,CAAC;aACT;QACL,CAAC,CAAC;IACN,CAAC;IAeD,qBAAE,GAAF,UAAG,KAAa,EAAE,QAAwB;QACtC,IAAI,OAAO,QAAQ,IAAI,UAAU,EAAE;YAC/B,OAAO,CAAC,IAAI,CAAC,qCAAmC,KAAO,CAAC;YACxD,OAAO;SACV;QACD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC;IACtC,CAAC;IAED,uBAAI,GAAJ,UAAK,SAAiB,EAAE,IAAI;QACxB,IAAI,GAAG;YACH,QAAQ,EAAE,OAAO,IAAI;YACrB,IAAI,EAAE,IAAI,IAAI,IAAI;YAClB,SAAS,EAAE,SAAS;SACvB;QAED,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,2BAAQ,GAAR;QAAA,iBAOC;QANG,UAAU,CAAC;YACP,IAAI,KAAI,CAAC,KAAK,KAAK,6DAAgB,CAAC,IAAI,EAAE;gBACtC,KAAI,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;gBAC1B,KAAI,CAAC,WAAW,EAAE,CAAC;aACtB;QACL,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;IACjC,CAAC;IAED,8BAAW,GAAX;QAAA,iBAIC;QAHG,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;YACxB,KAAI,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;QACzD,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IAChC,CAAC;IAED,+CAA4B,GAA5B;QAAA,iBA0CC;QAzCG,OAAO,IAAI,OAAO,CAAC,UAAC,GAAG;YACnB,KAAI,CAAC,SAAS,GAAG,IAAI,SAAS,CAAC,OAAO,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC;YACzD,KAAI,CAAC,SAAS,CAAC,MAAM,GAAG,UAAC,GAAG;gBACxB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,KAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,GAAG,EAAE,CAAC;gBACN,KAAI,CAAC,QAAQ,EAAE,CAAC;YACpB,CAAC,CAAC;YACF,KAAI,CAAC,SAAS,CAAC,OAAO,GAAG,UAAC,GAAG;gBACzB,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBACzB,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC;gBACtD,KAAI,CAAC,cAAc,EAAE,CAAC;YAC1B,CAAC,CAAC;YACF,KAAI,CAAC,SAAS,CAAC,SAAS,GAAG,UAAC,GAAG;gBAC3B,IAAM,OAAO,GAAuB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACzD,IAAI,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;oBACrC,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAC/B,qEAAc,CAAC,OAAO,CAAC,CAC1B,CAAC;iBACL;qBACI;oBACD,QAAQ,OAAO,CAAC,UAAU,EAAE;wBACxB,KAAK,MAAM;4BACP,YAAY,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;4BAC7B,KAAI,CAAC,QAAQ,EAAE,CAAC;4BAChB,MAAM;wBACV,KAAK,MAAM;4BACP,KAAI,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;4BAC1B,MAAM;wBACV,KAAK,OAAO;4BACR,KAAI,CAAC,OAAO,CAAC;gCACT,IAAI,EAAE,OAAO,CAAC,IAAI;6BACrB,CAAC,CAAC;qBACV;iBACJ;YACL,CAAC,CAAC;YACF,KAAI,CAAC,SAAS,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC;YAEtC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC;QACvD,CAAC,CAAC;IAEN,CAAC;IAED,4BAAS,GAAT;QACI,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC;IAClC,CAAC;IAEL,eAAC;AAAD,CAAC","file":"shivneri-ws-client.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","export enum CONNECTION_STATE {\n    CONNECTING = 0,\n    OPEN = 1,\n    CLOSING = 2,\n    CLOSED = 3\n}","export enum ERROR_TYPE {\n    InvalidUrl = \"invalid_url\",\n    NoUrlProvided = \"no_url_provided\"\n}","export * from \"./error_type\";\nexport * from \"./connection_state\";","import { IMessageFromServer } from \"../interfaces/index\";\n\nexport const convertMessage = function (message: IMessageFromServer) {\n    switch (message.data_type) {\n        case \"string\":\n            return message.data\n        case \"number\":\n            return Number(message.data);\n        case \"json\":\n            return JSON.parse(message.data);\n        case \"bool\":\n        case \"boolean\":\n            return message.data === \"true\";\n\n    }\n    return message.data\n}","import { ERROR_TYPE } from \"../enums/index\";\n\nexport function getError(err: ERROR_TYPE, payload?) {\n    const getErrorMessage = () => {\n        switch (err) {\n            case ERROR_TYPE.InvalidUrl:\n                return `invalid web socket url ${payload}`;\n            case ERROR_TYPE.NoUrlProvided:\n                return `provide url in constructor`;\n        }\n    }\n\n\n    return {\n        type: err,\n        message: getErrorMessage()\n    };\n}","export * from \"./get_error\";\nexport * from \"./remove_last_slash\"\nexport * from \"./convert_message\";","export const removeLastSlash = (url: string) => {\n    const urlLength = url.length;\n    // removing / from url;\n    if (url[urlLength - 1] === \"/\") {\n        return url.substr(0, urlLength - 1);\n    }\n    return url;\n};","import { ERROR_TYPE, CONNECTION_STATE } from \"./enums/index\";\nimport { removeLastSlash, convertMessage, getError } from \"./helpers/index\";\nimport { IMessageFromServer, IOption } from \"./interfaces/index\";\n\nexport class Instance {\n    socketUrl: string;\n    inputUrl: string;\n    webSocket: WebSocket;\n    pongTimer: number;\n    option: IOption = {\n        pingInterval: 10000,\n        pingTimeout: 10000\n    };\n    isConnected = false;\n\n\n\n    get state() {\n        return this.webSocket.readyState\n    }\n\n    init(url: string, option: IOption) {\n        this.inputUrl = url;\n        if (url) {\n            this.socketUrl = removeLastSlash(url);\n        }\n        else {\n            throw getError(ERROR_TYPE.NoUrlProvided);\n        }\n        Object.assign(this.option, option);\n        return new Promise((res, rej) => {\n            fetch(`http://${this.socketUrl}/info`).then(response => {\n                if (response.ok) {\n                    this.establishWebSocketConnection().then(res).catch(rej);\n                }\n                else {\n                    rej(getError(ERROR_TYPE.InvalidUrl, this.socketUrl));\n                }\n            }).catch(err => {\n                rej(getError(ERROR_TYPE.InvalidUrl, this.inputUrl));\n            });\n        });\n    }\n\n    eventStore = {};\n\n    close(message: string) {\n        return new Promise((res) => {\n            if (this.isConnected) {\n                this.webSocket.close(1000, message || \"Manually closing\");\n                const checkForClose = () => {\n                    setTimeout(() => {\n                        if (this.isConnected) {\n                            checkForClose();\n                        }\n                        else {\n                            res();\n                        }\n                    }, 100);\n                }\n                checkForClose();\n            }\n            else {\n                res();\n            }\n        })\n    }\n\n    onError = function (error) {\n\n    }\n\n    onConnected = function () {\n\n    }\n\n    onDisconnected = function () {\n\n    }\n\n\n    on(event: string, callback: (data) => void) {\n        if (typeof callback != \"function\") {\n            console.warn(`invalid event handler for event ${event}`)\n            return;\n        }\n        this.eventStore[event] = callback;\n    }\n\n    emit(eventName: string, data) {\n        data = {\n            dataType: typeof data,\n            data: data || null,\n            eventName: eventName\n        }\n\n        this.webSocket.send(JSON.stringify(data));\n    }\n\n    sendPing() {\n        setTimeout(() => {\n            if (this.state === CONNECTION_STATE.OPEN) {\n                this.emit(\"ping\", \"ping\");\n                this.waitForPong();\n            }\n        }, this.option.pingInterval);\n    }\n\n    waitForPong() {\n        this.pongTimer = setTimeout(() => {\n            this.close(\"pong not received within speified time\");\n        }, this.option.pingTimeout);\n    }\n\n    establishWebSocketConnection() {\n        return new Promise((res) => {\n            this.webSocket = new WebSocket(\"ws://\" + this.socketUrl);\n            this.webSocket.onopen = (evt) => {\n                this.isConnected = true;\n                this.onConnected();\n                res();\n                this.sendPing();\n            };\n            this.webSocket.onclose = (evt) => {\n                this.isConnected = false;\n                window.removeEventListener('offline', this.onOffline);\n                this.onDisconnected();\n            };\n            this.webSocket.onmessage = (evt) => {\n                const message: IMessageFromServer = JSON.parse(evt.data);\n                if (this.eventStore[message.event_name]) {\n                    this.eventStore[message.event_name](\n                        convertMessage(message)\n                    );\n                }\n                else {\n                    switch (message.event_name) {\n                        case \"pong\":\n                            clearTimeout(this.pongTimer);\n                            this.sendPing();\n                            break;\n                        case \"ping\":\n                            this.emit(\"pong\", \"pong\");\n                            break;\n                        case \"error\":\n                            this.onError({\n                                data: message.data\n                            });\n                    }\n                }\n            };\n            this.webSocket.onerror = this.onError;\n\n            window.addEventListener('offline', this.onOffline);\n        })\n\n    }\n\n    onOffline() {\n        this.close(\"offline detected\")\n    }\n\n}\n\n\n\n\n"],"sourceRoot":""}